Menu="Utilities"
Icon="snmp.png"
Title="SNMP"
Tag="cogs"
---

<!-- Menu is in what section of Unraid the page shows up.  -->
<!-- "Utilities" puts this page in Settings > User Utilities -->
<!-- "Tools" puts this page in the Tools menu -->
<!-- Icon can be the png in the /usr/local/emhttp/plugins/snmp dir -->
<!-- Title is the name showing up on the Settings page / in the header -->
<!-- Tag can be any Font Awesome icon name https://fontawesome.com/icons -->


<?
// Dynamix provided function to parse /boot/config/plugins/snmp/snmp.cfg
// Sample line from .cfg: SETTINGNAME="value";
$cfg = parse_plugin_cfg('snmp');
?>

<!-- Creates the settings form, which can POST updates to the server -->
<!-- Configures reads/writes to the file /boot/config/plugins/snmp/snmp.cfg -->
<form markdown="1" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="snmp/snmp.cfg">

<!-- Adds a new category to the Form -->
<!-- The colon space moves it in the same line to the right -->
<!-- Set the name to be used for storage in the file, plus the ID for javascript reference -->
Enable Unsafe Temperature Checking:
: <select name="UNSAFETEMP" id="unsafeTemp">
	<!-- Create options for this category. It will try to grab the config value first, -->
	<!-- and then fall back to the first option for visibility -->
	<!-- 0/1 are the values written to the .cfg while No/Yes are shown in the UI -->
  <?=mk_option($cfg['UNSAFETEMP'], "0", "No") ?>
  <?=mk_option($cfg['UNSAFETEMP'], "1", "Yes") ?>
  </select>

<!-- Popup help section that can be accessed by clicking on the category name -->
:unsafe_disk_temp_plug:
> By default, this is disabled and SNMP only checks the disk temperature if the disk reports itself to be out of STANDBY mode. Some systems' disks always report STANDBY mode, preventing SNMP from ever fetching disk temperature. Enable this setting to use a less safe method of temperature fetching that may wake the disks from STANDBY in some systems.
:end

<!-- Create a button titled "Default" in the UI -->
<!-- It calls setDefaults javascript function when clicked and then submits the form after-->
<input type="submit" value="Default" onClick="setDefaults(this.form)">
<!-- Create a button titled "Apply" that submits the form -->
: <input type="submit" value="Apply">
<!-- Button titled "Done" that calls done() and returns to the page before without submission -->
<input type="button" value="Done" onclick="done()">
</form>


<!-- Javascript block where we can define various JS code -->
<!-- Create a function called setDefaults that resets the form values -->
<!-- It finds form values by their ID -->
<script type="text/javascript">
function setDefaults(form) {
	form.unsafeTemp.value = "0";
}
</script>
