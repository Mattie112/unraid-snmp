<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name        "snmp">
<!ENTITY author      "kubedzero">
<!ENTITY gitbranch   "test">

<!ENTITY pluginver   "2020.09.19">
<!ENTITY minosver    "6.7.0">

<!ENTITY pluginurl   "https://github.com/&author;/unraid-snmp/raw/&gitbranch;/snmp.plg">
<!ENTITY supporturl  "https://forums.unraid.net/topic/39339-plug-in-snmp">
<!ENTITY pkgurl      "https://raw.githubusercontent.com/&author;/unraid-snmp/&gitbranch;/packages">

<!-- Defines the destination directory where all final files will be stored -->
<!ENTITY workingdir  "/usr/local/emhttp/plugins/&name;">
<!-- Defines the persistent (USB) directory where downloaded packages are cached -->
<!ENTITY usbcfgdir   "/boot/config/plugins/&name;">

<!ENTITY snmppkg     "net-snmp-5.9-x86_64-1.txz">
<!ENTITY snmppkgmd5  "b4f6f3dfef81d1f58171012800b8ffc6">

<!ENTITY libnlpkg    "libnl-1.1.4-x86_64-3.txz">
<!ENTITY libnlpkgmd5 "82c9374aaa9c7f4efbde8041f87d6053">

<!ENTITY perlpkg     "perl-5.32.0-x86_64-1.txz">
<!ENTITY perlpkgmd5  "6993da990e2decbae18e92c5bf615dbe">

<!ENTITY pluginpkg   "unraid-snmp-&pluginver;-x86_64-1.txz">
<!ENTITY pluginpkgmd "bd06aa8b36e2b79599a713376c1cc885">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&pluginver;"
         pluginURL="&pluginurl;"
         support="&supporturl;"
         min="&minosver;"
         >

<CHANGES>
##SNMP

###2020.09.19
- Migrate SNMP plugin to .txz style install 
- Updated net-snmp from 5.8-5 to 5.9
- Updated libnl from 1.1.4 to 1.1.4-3
- Perl 5.32.0 declared as dependency instead of separate install. 
 - Plugin maintainer should keep the version in sync with Nerd Pack
- Refactored `share_free_space.sh` for added clarity
- Refactored `drive_temps.sh` for clearer cached temperature behavior 
 - Caching present for rapid SNMP calls and large arrays
- Added `disk_free_space.sh` to print free KB in /boot and /mnt/disk* 
 - Exposed in SNMP as `diskfree`
- Added `proc_mhz.sh` at request of forum user Max to output CPU overall MHz 
 - Exposed in SNMP as `cpumhz`
 - Tested only for an Intel CPU virtualized under ESXi
- Install logging more clearly states usage of single and double quotes in sample calls


###2020.04.01
- Cache downloaded files on USB to support offline installation
- Add /mnt/disk up to 28 from 20 to provide 30 drive support
- Add MD5 for shell scripts
- Format plugin name in README to be in line with other plugins
- More consistent variable use and naming in .plg file
- Clearer install and uninstall logging

###2019.05.28c
- Fix icon file

###2019.05.28b
- Customized for the kubedzero repository

###2019.05.28
- Updated plugin to work with 6.7.0, enforce minimum version

###2018.07.22
- Fix bug with grep and "mostfree" allocator. https://github.com/coppit/unraid-snmp/pull/1

###2017.02.07
- Drop all pretense of trying to keep up with nerd tools. Just require perl, and suggest that the user install nerd tools.

###2016.02.28
- Bump the version of perl to match nerd tools.

###2015.10.18
- Run temperature updates in the background

###2015.09.06
- Move packages to github for better reliability

###2015.09.05
- Add support for reporting share free space

###2015.08.25
- Download and install the drive temp script (duh)

###2015.08.24
- Added hard drive temperature capture

###2015.08.23
- Reduced logging to "warning" level

###2015.06.24
- Initial unRAID V6 release.
</CHANGES>


<!-- Download, cache and install dependent perl package shared with Nerd Pack -->
<FILE Name="&usbcfgdir;/&perlpkg;" Run="upgradepkg --install-new">
<URL>&pkgurl;/&perlpkg;</URL>
<MD5>&perlpkgmd5;</MD5>
</FILE>

<!-- Download, cache and install dependent libnl package -->
<FILE Name="&usbcfgdir;/&libnlpkg;" Run="upgradepkg --install-new">
<URL>&pkgurl;/&libnlpkg;</URL>
<MD5>&libnlpkgmd5;</MD5>
</FILE>

<!-- Download, cache and install the net-snmp package -->
<FILE Name="&usbcfgdir;/&snmppkg;" Run="upgradepkg --install-new">
<URL>&pkgurl;/&snmppkg;</URL>
<MD5>&snmppkgmd5;</MD5>
</FILE>

<!-- Download, cache and install the Unraid Plugin package -->
<FILE Name="&usbcfgdir;/&pluginpkg;" Run="upgradepkg --install-new">
<URL>&pkgurl;/&pluginpkg;</URL>
<MD5>&pluginpkgmd5;</MD5>
</FILE>

<!-- Test SNMP functionality -->
<FILE Run="/bin/bash">
<INLINE>
# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
# exit script early if we encounter an error
set -e

echo ""
echo "+=============================================================================="
echo "| Testing SNMP by listing mounts, /boot should be present"
echo "+=============================================================================="

RESULTS=$(snmpwalk -v 1 localhost -c public hrFSMountPoint 2>&amp;1)
if [[ "$RESULTS" =~ "/boot" ]]
then
  echo "Looks like snmpd is working... Output:"
  echo "$RESULTS"
else
  echo "Couldn't find /boot mount point in SNMP output. Output:"
  echo "$RESULTS"
  echo ""
  echo ""
  exit 1
fi

printf "\nHere is how share free spaces look:\n"
printf "snmpwalk -v 2c -c public localhost 'NET-SNMP-EXTEND-MIB::nsExtendOutLine.\"sharefree\"'\n"
snmpwalk -v 2c -c public localhost 'NET-SNMP-EXTEND-MIB::nsExtendOutLine."sharefree"'

printf "\nHere is how all extensions look:\n"
printf "snmpwalk -v 2c -c public localhost nsExtendOutLine\n"
snmpwalk -v 2c -c public localhost nsExtendOutLine

echo ""
echo ""
echo ""
echo "-----------------------------------------------------------"
echo " &name; has been installed."
echo " Version: &pluginver;"
echo "-----------------------------------------------------------"
echo ""

exit 0
</INLINE>
</FILE>

<!-- The 'remove' script -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
# exit script early if we encounter an error
set -e

echo ""
echo "+=============================================================================="
echo "| Uninstalling packages"
echo "+=============================================================================="

# Uninstall the unraid-snmp package
removepkg $(basename &pluginpkg; .txz) | grep -v -e '  --&gt; Deleting'

# Uninstall the net-snmp package
removepkg $(basename &snmppkg; .txz) | grep -v -e '  --&gt; Deleting'

# Uninstall prerequisites in the reverse order of their installation
removepkg $(basename &libnlpkg; .txz) | grep -v -e '  --&gt; Deleting'

# NOTE: Skipping package removal of prereqs in Nerd Pack in case other plugins depend on them
#removepkg $(basename &perlpkg; .txz) | grep -v -e '  --&gt; Deleting'

echo ""
echo "+=============================================================================="
echo "| Deleting &workingdir;"
echo "| Deleting &usbcfgdir;"
echo "+=============================================================================="

# Delete the USB plugin folder storing cached files
rm -rf &usbcfgdir;

# Remove plugin.
rm -rf &workingdir;

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been uninstalled."
echo "-----------------------------------------------------------"
echo ""

</INLINE>
</FILE>

</PLUGIN>
